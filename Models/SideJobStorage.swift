//
//  SideJobStorage.swift
//  EarnLog
//
//  Created by M3 pro on 02/08/2025.
//

import Foundation

class SideJobStorage: MemoryTrackable{
    
    static let shared = SideJobStorage()
    
    private let key = "customSideJobs"
    
    private var excempleSideJobs: [IncomeSource.SideJob] = []
    
    private var allCustomJobs = [IncomeSource.SideJob]()
    
    private init() {
        if loadAllCustomJobs().isEmpty {
//            createExampleJobsIfNeeded()
        }
        trackCreation() //–¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ memory leaks
    }
    
    func createExampleJobsIfNeeded() {
        let exampleJobs = [
            IncomeSource.SideJob(id: UUID(uuidString: "5006324B-56D3-401A-8234-BC2064F90B1F")!, name: "Prodetail", isCustom: true, isActive: true),
            IncomeSource.SideJob(id: UUID(uuidString: "DD36911A-FACA-4E7E-9D26-FDF9808E1F14")!, name: "Fenix", isCustom: true, isActive: true),
            IncomeSource.SideJob(id: UUID(uuidString: "A8F7B3E4-4C91-4424-80D4-2C15B0A6B9F9")!, name: "Warszawa26", isCustom: true, isActive: true)
        ]
        saveCustomJobs(jobs: exampleJobs)
    }
    
    func loadActiveCustomJobs() -> [IncomeSource.SideJob] {
        return loadAllCustomJobs().filter { $0.isActive }
    }
    
    func loadAllCustomJobs() -> [IncomeSource.SideJob]{
        guard let customSideJobs = UserDefaults.standard.data(forKey: key) else { return []}
        do {
            return try JSONDecoder().decode([IncomeSource.SideJob].self, from: customSideJobs)
        } catch {
            print("‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏, –ø—Ä–æ–±—É–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç: \(error)")
            
            // –ü–æ–ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞–∫ —Å—Ç–∞—Ä—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –±–µ–∑ isActive
            do{
                return try migrateOldFormat(from: customSideJobs)
            } catch {
                return []
            }
        }
    }
    
    private func migrateOldFormat(from data: Data) throws -> [IncomeSource.SideJob] {
        // –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        struct OldSideJob: Codable {
            let id: UUID
            var name: String
            let isCustom: Bool
        }
        
        do {
            let oldJobs = try JSONDecoder().decode([OldSideJob].self, from: data)
            
            // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç
            let newJobs = oldJobs.map { oldJob in
                IncomeSource.SideJob(
                    id: oldJob.id,
                    name: oldJob.name,
                    isCustom: oldJob.isCustom,
                    isActive: true, // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å true
                )
            }
            
            // –°—Ä–∞–∑—É —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –Ω–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            saveCustomJobs(jobs: newJobs)
            print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
            
            return newJobs
        } catch {
            print("‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: \(error)")
            throw error
        }
    }
    
    // ‚úÖ –ï–î–ò–ù–°–¢–í–ï–ù–ù–û–ï –º–µ—Å—Ç–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    func saveCustomJobs(jobs: [IncomeSource.SideJob]) {
        do {
            let data = try JSONEncoder().encode(jobs)
            UserDefaults.standard.set(data, forKey: key)
//            print("üì° saveCustomJobs –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
            NotificationCenter.default.post(name: .dataDidUpdate, object: nil)
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥—Ä–∞–±–æ—Ç–æ–∫: \(error)")
        }
    }
    
    // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: –∏—Å–ø–æ–ª—å–∑—É–µ–º saveCustomJobs
    func saveNewCustomJob(sideJobName: String) {
        let newSideJob = IncomeSource.SideJob(id: UUID(), name: sideJobName, isCustom: true, isActive: true)
        var allSideJobs = loadAllCustomJobs()
        allSideJobs.append(newSideJob)
        
        // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        saveCustomJobs(jobs: allSideJobs)
    }
    
    // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —Ä–∞–±–æ—Ç–∞–µ–º —Å–æ –í–°–ï–ú–ò –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞–º–∏
    func editCustomJob(newName: String, editingJobId: UUID) {
        var allSideJobs = loadAllCustomJobs() // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–ï (–≤–∫–ª—é—á–∞—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ)
        
        if let index = allSideJobs.firstIndex(where: { $0.id == editingJobId }) {
            allSideJobs[index].name = newName
            saveCustomJobs(jobs: allSideJobs)
//            AppFileManager.shared.updateSideJobInfo(sideJobId: id)
            AppFileManager.shared.updateSideJobInfo(updatedJob: allSideJobs[index])
//            print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∏: \(newName)")
        } else {
            print("‚ùå –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞ —Å id \(editingJobId) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        }
        
        // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        saveCustomJobs(jobs: allSideJobs)
    }
    
    // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ: —Ä–∞–±–æ—Ç–∞–µ–º —Å–æ –í–°–ï–ú–ò –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞–º–∏
    func deleteCustomJob(id: UUID) {
        var allSideJobs = loadAllCustomJobs() // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –í–°–ï
        
        if let index = allSideJobs.firstIndex(where: { $0.id == id }) {
            allSideJobs[index].isActive = false
            saveCustomJobs(jobs: allSideJobs)
//            AppFileManager.shared.updateSideJobInfo(sideJobId: id)
            AppFileManager.shared.updateSideJobInfo(updatedJob: allSideJobs[index])
//            print(allSideJobs)
//            print("‚úÖ –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞ '\(allSideJobs[index].name)' –ø–æ–º–µ—á–µ–Ω–∞ –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞—è")
//            print(allSideJobs)
        } else {
            print("‚ùå –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞ —Å id \(id) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        }
        
        // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–¥–∏–Ω—ã–π –º–µ—Ç–æ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        
    }
    
    // ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∏
    func getJobById(_ id: UUID) -> IncomeSource.SideJob? {
        return loadAllCustomJobs().first(where: { $0.id == id })
    }
    
    func getJobByIdOrPlaceholder(_ id: UUID) -> IncomeSource.SideJob {
        if let job = getJobById(id) {
            return job
        } else {
            return IncomeSource.SideJob(
                id: id,
                name: "–£–¥–∞–ª–µ–Ω–Ω–∞—è –ø–æ–¥—Ä–∞–±–æ—Ç–∫–∞",
                isCustom: true,
                isActive: false
            )
        }
    }
    
    deinit {
        trackDeallocation() // –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –Ω–∞ memory leaks
    }
}
